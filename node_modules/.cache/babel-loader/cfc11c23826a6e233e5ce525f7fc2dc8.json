{"ast":null,"code":"// import React, { useRef } from \"react\"\n// import { useGLTF } from \"@react-three/drei\"\n// export default function Model({}) {\n//     const { nodes, materials} = useGLTF(\"/earth.gltf\")\n//     return (\n//         <group scale={1.5} dispose={null}>\n//             <group scale={1.13}>\n//                 <mesh geometry={nodes.Object_4.geometry} material={materials[\"scene_-_Root\"]}>\n//                 </mesh>\n//             </group>\n//         </group>\n//     )\n// }\n// // useGLTF.preload(\"/earth.gltf\")\n//  import * as THREE from 'three';\n// export default Earth\n// const scene = new THREE.Scene();\n// const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n// const renderer = new THREE.WebGLRenderer();\n// renderer.setSize( window.innerWidth, window.innerHeight );\n// document.body.appendChild( renderer.domElement );\n// const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n// const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n// const cube = new THREE.Mesh( geometry, material );\n// scene.add( cube );\n// camera.position.z = 5;\n// function animate() {\n// \trequestAnimationFrame( animate );\n// \trenderer.render( scene, camera );\n// }\n// animate();","map":{"version":3,"names":[],"sources":["/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/src/components/Earth.js"],"sourcesContent":["\n// import React, { useRef } from \"react\"\n// import { useGLTF } from \"@react-three/drei\"\n\n// export default function Model({}) {\n//     const { nodes, materials} = useGLTF(\"/earth.gltf\")\n//     return (\n//         <group scale={1.5} dispose={null}>\n//             <group scale={1.13}>\n//                 <mesh geometry={nodes.Object_4.geometry} material={materials[\"scene_-_Root\"]}>\n//                 </mesh>\n//             </group>\n//         </group>\n//     )\n// }\n\n// // useGLTF.preload(\"/earth.gltf\")\n\n//  import * as THREE from 'three';\n\n// export default Earth\n\n// const scene = new THREE.Scene();\n// const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\n// const renderer = new THREE.WebGLRenderer();\n// renderer.setSize( window.innerWidth, window.innerHeight );\n// document.body.appendChild( renderer.domElement );\n\n// const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n// const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n// const cube = new THREE.Mesh( geometry, material );\n// scene.add( cube );\n\n// camera.position.z = 5;\n\n\n// function animate() {\n// \trequestAnimationFrame( animate );\n// \trenderer.render( scene, camera );\n// }\n// animate();"],"mappings":"AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}