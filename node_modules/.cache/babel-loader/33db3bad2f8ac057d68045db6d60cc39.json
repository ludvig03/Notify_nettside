{"ast":null,"code":"import _slicedToArray from \"/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../Line.js';\nimport { context } from './context.js';\nvar ray = new THREE.Ray();\nvar intersection = new THREE.Vector3();\nvar offsetMatrix = new THREE.Matrix4();\n\nvar PlaneSlider = function PlaneSlider(_ref) {\n  var dir1 = _ref.dir1,\n      dir2 = _ref.dir2,\n      axis = _ref.axis;\n\n  var _React$useContext = React.useContext(context),\n      depthTest = _React$useContext.depthTest,\n      scale = _React$useContext.scale,\n      lineWidth = _React$useContext.lineWidth,\n      fixed = _React$useContext.fixed,\n      axisColors = _React$useContext.axisColors,\n      hoveredColor = _React$useContext.hoveredColor,\n      opacity = _React$useContext.opacity,\n      onDragStart = _React$useContext.onDragStart,\n      onDrag = _React$useContext.onDrag,\n      onDragEnd = _React$useContext.onDragEnd,\n      userData = _React$useContext.userData; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n\n  var camControls = useThree(function (state) {\n    return state.controls;\n  });\n  var objRef = React.useRef(null);\n  var clickInfo = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isHovered = _React$useState2[0],\n      setIsHovered = _React$useState2[1];\n\n  var onPointerDown = React.useCallback(function (e) {\n    e.stopPropagation();\n    var clickPoint = e.point.clone();\n    var origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    var normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    var plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint: clickPoint,\n      plane: plane\n    };\n    onDragStart();\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart]);\n  var onPointerMove = React.useCallback(function (e) {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      var _clickInfo$current = clickInfo.current,\n          clickPoint = _clickInfo$current.clickPoint,\n          plane = _clickInfo$current.plane;\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      offsetMatrix.makeTranslation(intersection.x, intersection.y, intersection.z);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered]);\n  var onPointerUp = React.useCallback(function (e) {\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  var onPointerOut = React.useCallback(function (e) {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  var matrixL = React.useMemo(function () {\n    var dir1N = dir1.clone().normalize();\n    var dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  var pos1 = fixed ? 1 / 7 : scale / 7;\n  var length = fixed ? 0.225 : scale * 0.225;\n  var color = isHovered ? hoveredColor : axisColors[axis];\n  var points = React.useMemo(function () {\n    return [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)];\n  }, [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData\n  })));\n};\n\nexport { PlaneSlider };","map":{"version":3,"names":["React","THREE","useThree","Line","context","ray","Ray","intersection","Vector3","offsetMatrix","Matrix4","PlaneSlider","dir1","dir2","axis","useContext","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","camControls","state","controls","objRef","useRef","clickInfo","useState","isHovered","setIsHovered","onPointerDown","useCallback","e","stopPropagation","clickPoint","point","clone","origin","setFromMatrixPosition","current","matrixWorld","normal","setFromMatrixColumn","normalize","plane","Plane","setFromNormalAndCoplanarPoint","enabled","target","setPointerCapture","pointerId","onPointerMove","copy","intersectPlane","direction","negate","sub","makeTranslation","x","y","z","onPointerUp","releasePointerCapture","onPointerOut","matrixL","useMemo","dir1N","dir2N","makeBasis","cross","pos1","length","color","points","createElement","ref","matrix","matrixAutoUpdate","position","visible","transparent","polygonOffset","polygonOffsetFactor","side","DoubleSide"],"sources":["/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@react-three/drei/core/pivotControls/PlaneSlider.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../Line.js';\nimport { context } from './context.js';\n\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst offsetMatrix = new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      plane\n    };\n    onDragStart();\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        plane\n      } = clickInfo.current;\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      offsetMatrix.makeTranslation(intersection.x, intersection.y, intersection.z);\n      onDrag(offsetMatrix);\n    }\n  }, [onDrag, isHovered]);\n  const onPointerUp = React.useCallback(e => {\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData\n  })));\n};\n\nexport { PlaneSlider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}