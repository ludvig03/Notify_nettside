{"ast":null,"code":"import * as THREE from 'three';\nexport default class Earth {\n  constructor(canvasRef) {\n    this.scene = new THREE.Scene();\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: canvasRef,\n      antialias: false\n    }); // Create meshes, materials, etc.\n\n    const geometry = new THREE.SphereGeometry(15, 32, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffff00\n    });\n    const sphere = new THREE.Mesh(geometry, material);\n    scene.add(sphere);\n    this.update();\n  } // ******************* PUBLIC EVENTS ******************* //\n\n\n  updateValue(value) {// Whatever you need to do with React props\n  }\n\n  onMouseMove() {// Mouse moves\n  }\n\n  onWindowResize(vpW, vpH) {\n    this.renderer.setSize(vpW, vpH);\n  } // ******************* RENDER LOOP ******************* //\n\n\n  update(t) {\n    this.renderer.render(this.scene, this.camera);\n    requestAnimationFrame(this.update.bind(this));\n  }\n\n}","map":{"version":3,"names":["THREE","Earth","constructor","canvasRef","scene","Scene","renderer","WebGLRenderer","canvas","antialias","geometry","SphereGeometry","material","MeshBasicMaterial","color","sphere","Mesh","add","update","updateValue","value","onMouseMove","onWindowResize","vpW","vpH","setSize","t","render","camera","requestAnimationFrame","bind"],"sources":["/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/src/components/Earth.js"],"sourcesContent":["import * as THREE from 'three';\n\nexport default class Earth{\n    constructor(canvasRef) {\n        this.scene = new THREE.Scene();\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: canvasRef,\n            antialias: false,\n        });\n\n        // Create meshes, materials, etc.\n        const geometry = new THREE.SphereGeometry( 15, 32, 16 );\n        const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n        const sphere = new THREE.Mesh( geometry, material );\n        scene.add( sphere );\n\n        this.update();\n    }\n\n    // ******************* PUBLIC EVENTS ******************* //\n    updateValue(value) {\n      // Whatever you need to do with React props\n    }\n\n    onMouseMove() {\n      // Mouse moves\n    }\n\n    onWindowResize(vpW, vpH) {\n        this.renderer.setSize(vpW, vpH);\n    }\n\n    // ******************* RENDER LOOP ******************* //\n    update(t) {\n        this.renderer.render(this.scene, this.camera);\n\n        requestAnimationFrame(this.update.bind(this));\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,eAAe,MAAMC,KAAN,CAAW;EACtBC,WAAW,CAACC,SAAD,EAAY;IACnB,KAAKC,KAAL,GAAa,IAAIJ,KAAK,CAACK,KAAV,EAAb;IACA,KAAKC,QAAL,GAAgB,IAAIN,KAAK,CAACO,aAAV,CAAwB;MACpCC,MAAM,EAAEL,SAD4B;MAEpCM,SAAS,EAAE;IAFyB,CAAxB,CAAhB,CAFmB,CAOnB;;IACA,MAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,cAAV,CAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,CAAjB;IACA,MAAMC,QAAQ,GAAG,IAAIZ,KAAK,CAACa,iBAAV,CAA6B;MAAEC,KAAK,EAAE;IAAT,CAA7B,CAAjB;IACA,MAAMC,MAAM,GAAG,IAAIf,KAAK,CAACgB,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAf;IACAR,KAAK,CAACa,GAAN,CAAWF,MAAX;IAEA,KAAKG,MAAL;EACH,CAfqB,CAiBtB;;;EACAC,WAAW,CAACC,KAAD,EAAQ,CACjB;EACD;;EAEDC,WAAW,GAAG,CACZ;EACD;;EAEDC,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAW;IACrB,KAAKlB,QAAL,CAAcmB,OAAd,CAAsBF,GAAtB,EAA2BC,GAA3B;EACH,CA5BqB,CA8BtB;;;EACAN,MAAM,CAACQ,CAAD,EAAI;IACN,KAAKpB,QAAL,CAAcqB,MAAd,CAAqB,KAAKvB,KAA1B,EAAiC,KAAKwB,MAAtC;IAEAC,qBAAqB,CAAC,KAAKX,MAAL,CAAYY,IAAZ,CAAiB,IAAjB,CAAD,CAArB;EACH;;AAnCqB"},"metadata":{},"sourceType":"module"}