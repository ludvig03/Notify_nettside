{"ast":null,"code":"// import React, { useRef } from \"react\"\n// import { useGLTF } from \"@react-three/drei\"\n// export default function Model({}) {\n//     const { nodes, materials} = useGLTF(\"/earth.gltf\")\n//     return (\n//         <group scale={1.5} dispose={null}>\n//             <group scale={1.13}>\n//                 <mesh geometry={nodes.Object_4.geometry} material={materials[\"scene_-_Root\"]}>\n//                 </mesh>\n//             </group>\n//         </group>\n//     )\n// }\n// useGLTF.preload(\"/earth.gltf\")\nimport * as THREE from 'three';\nexport default Earth;\n{\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n  const renderer = new THREE.WebGLRenderer();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const material = new THREE.MeshBasicMaterial({\n    color: 0x00ff00\n  });\n  const cube = new THREE.Mesh(geometry, material);\n  scene.add(cube);\n  camera.position.z = 5;\n\n  function animate() {\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n  }\n\n  animate();\n}","map":{"version":3,"names":["THREE","Earth","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","render"],"sources":["/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/src/components/Earth.js"],"sourcesContent":["\n// import React, { useRef } from \"react\"\n// import { useGLTF } from \"@react-three/drei\"\n\n// export default function Model({}) {\n//     const { nodes, materials} = useGLTF(\"/earth.gltf\")\n//     return (\n//         <group scale={1.5} dispose={null}>\n//             <group scale={1.13}>\n//                 <mesh geometry={nodes.Object_4.geometry} material={materials[\"scene_-_Root\"]}>\n//                 </mesh>\n//             </group>\n//         </group>\n//     )\n// }\n\n// useGLTF.preload(\"/earth.gltf\")\n\n import * as THREE from 'three';\n\nexport default Earth; {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    document.body.appendChild( renderer.domElement );\n\n    const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n    const cube = new THREE.Mesh( geometry, material );\n    scene.add( cube );\n\n    camera.position.z = 5;\n\n\n    function animate() {\n        requestAnimationFrame( animate );\n        renderer.render( scene, camera );\n    }\n    animate();\n}\n\n"],"mappings":"AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEC,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAED,eAAeC,KAAf;AAAsB;EAClB,MAAMC,KAAK,GAAG,IAAIF,KAAK,CAACG,KAAV,EAAd;EACA,MAAMC,MAAM,GAAG,IAAIJ,KAAK,CAACK,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,GAAzE,EAA8E,IAA9E,CAAf;EAEA,MAAMC,QAAQ,GAAG,IAAIT,KAAK,CAACU,aAAV,EAAjB;EACAD,QAAQ,CAACE,OAAT,CAAkBL,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;EACAI,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA2BL,QAAQ,CAACM,UAApC;EAEA,MAAMC,QAAQ,GAAG,IAAIhB,KAAK,CAACiB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAjB;EACA,MAAMC,QAAQ,GAAG,IAAIlB,KAAK,CAACmB,iBAAV,CAA6B;IAAEC,KAAK,EAAE;EAAT,CAA7B,CAAjB;EACA,MAAMC,IAAI,GAAG,IAAIrB,KAAK,CAACsB,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAb;EACAhB,KAAK,CAACqB,GAAN,CAAWF,IAAX;EAEAjB,MAAM,CAACoB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;EAGA,SAASC,OAAT,GAAmB;IACfC,qBAAqB,CAAED,OAAF,CAArB;IACAjB,QAAQ,CAACmB,MAAT,CAAiB1B,KAAjB,EAAwBE,MAAxB;EACH;;EACDsB,OAAO;AACV"},"metadata":{},"sourceType":"module"}