{"ast":null,"code":"import _toArray from \"/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _regeneratorRuntime from \"/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectWithoutProperties from \"/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"font\", \"letterSpacing\", \"lineHeight\", \"size\", \"height\", \"bevelThickness\", \"bevelSize\", \"bevelEnabled\", \"bevelOffset\", \"bevelSegments\", \"curveSegments\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { TextGeometry, FontLoader } from 'three-stdlib';\nvar types = ['string', 'number'];\n\nvar getTextFromChildren = function getTextFromChildren(children) {\n  var label = '';\n  var rest = [];\n  React.Children.forEach(children, function (child) {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label].concat(rest);\n};\n\nvar Text3D = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _font = _ref.font,\n      _ref$letterSpacing = _ref.letterSpacing,\n      letterSpacing = _ref$letterSpacing === void 0 ? 0 : _ref$letterSpacing,\n      _ref$lineHeight = _ref.lineHeight,\n      lineHeight = _ref$lineHeight === void 0 ? 1 : _ref$lineHeight,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 1 : _ref$size,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 0.2 : _ref$height,\n      _ref$bevelThickness = _ref.bevelThickness,\n      bevelThickness = _ref$bevelThickness === void 0 ? 0.1 : _ref$bevelThickness,\n      _ref$bevelSize = _ref.bevelSize,\n      bevelSize = _ref$bevelSize === void 0 ? 0.01 : _ref$bevelSize,\n      _ref$bevelEnabled = _ref.bevelEnabled,\n      bevelEnabled = _ref$bevelEnabled === void 0 ? false : _ref$bevelEnabled,\n      _ref$bevelOffset = _ref.bevelOffset,\n      bevelOffset = _ref$bevelOffset === void 0 ? 0 : _ref$bevelOffset,\n      _ref$bevelSegments = _ref.bevelSegments,\n      bevelSegments = _ref$bevelSegments === void 0 ? 4 : _ref$bevelSegments,\n      _ref$curveSegments = _ref.curveSegments,\n      curveSegments = _ref$curveSegments === void 0 ? 8 : _ref$curveSegments,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  React.useMemo(function () {\n    return extend({\n      RenamedTextGeometry: TextGeometry\n    });\n  }, []);\n  var font = suspend( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var data, loader;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof _font === 'string')) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch(_font);\n\n          case 3:\n            _context.next = 5;\n            return _context.sent.json();\n\n          case 5:\n            _context.t0 = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 8:\n            _context.t0 = _font;\n\n          case 9:\n            data = _context.t0;\n            loader = new FontLoader();\n            return _context.abrupt(\"return\", loader.parse(data));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [_font]);\n  var opts = useMemo(function () {\n    return {\n      font: font,\n      size: size,\n      height: height,\n      bevelThickness: bevelThickness,\n      bevelSize: bevelSize,\n      bevelEnabled: bevelEnabled,\n      bevelSegments: bevelSegments,\n      bevelOffset: bevelOffset,\n      curveSegments: curveSegments,\n      letterSpacing: letterSpacing,\n      lineHeight: lineHeight\n    };\n  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelOffset, curveSegments, letterSpacing, lineHeight]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  var _useMemo = useMemo(function () {\n    return getTextFromChildren(children);\n  }, [children]),\n      _useMemo2 = _toArray(_useMemo),\n      label = _useMemo2[0],\n      rest = _useMemo2.slice(1);\n\n  var args = React.useMemo(function () {\n    return [label, opts];\n  }, [label, opts]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\nexport { Text3D };","map":{"version":3,"names":["_extends","React","useMemo","extend","suspend","TextGeometry","FontLoader","types","getTextFromChildren","children","label","rest","Children","forEach","child","includes","push","Text3D","forwardRef","ref","_font","font","letterSpacing","lineHeight","size","height","bevelThickness","bevelSize","bevelEnabled","bevelOffset","bevelSegments","curveSegments","props","RenamedTextGeometry","fetch","json","data","loader","parse","opts","args","createElement"],"sources":["/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@react-three/drei/core/Text3D.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { TextGeometry, FontLoader } from 'three-stdlib';\n\nconst types = ['string', 'number'];\n\nconst getTextFromChildren = children => {\n  let label = '';\n  const rest = [];\n  React.Children.forEach(children, child => {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label, ...rest];\n};\n\nconst Text3D = /*#__PURE__*/React.forwardRef(({\n  font: _font,\n  letterSpacing = 0,\n  lineHeight = 1,\n  size = 1,\n  height = 0.2,\n  bevelThickness = 0.1,\n  bevelSize = 0.01,\n  bevelEnabled = false,\n  bevelOffset = 0,\n  bevelSegments = 4,\n  curveSegments = 8,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    RenamedTextGeometry: TextGeometry\n  }), []);\n  const font = suspend(async () => {\n    let data = typeof _font === 'string' ? await (await fetch(_font)).json() : _font;\n    let loader = new FontLoader();\n    return loader.parse(data);\n  }, [_font]);\n  const opts = useMemo(() => {\n    return {\n      font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelSegments,\n      bevelOffset,\n      curveSegments,\n      letterSpacing,\n      lineHeight\n    };\n  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelOffset, curveSegments, letterSpacing, lineHeight]);\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n\n  const [label, ...rest] = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [label, opts], [label, opts]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\n\nexport { Text3D };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}