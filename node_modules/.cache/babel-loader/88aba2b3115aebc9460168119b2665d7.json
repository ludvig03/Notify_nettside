{"ast":null,"code":"import _slicedToArray from \"/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../Line.js';\nimport { Html } from '../../web/Html.js';\nimport clamp from 'lodash.clamp';\nimport { context } from './context.js';\nvar clickDir = new THREE.Vector3();\nvar intersectionDir = new THREE.Vector3();\n\nvar toDegrees = function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar toRadians = function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar calculateAngle = function calculateAngle(clickPoint, intersectionPoint, origin, e1, e2) {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  var dote1e1 = e1.dot(e1);\n  var dote2e2 = e2.dot(e2);\n  var uClick = clickDir.dot(e1) / dote1e1;\n  var vClick = clickDir.dot(e2) / dote2e2;\n  var uIntersection = intersectionDir.dot(e1) / dote1e1;\n  var vIntersection = intersectionDir.dot(e2) / dote2e2;\n  var angleClick = Math.atan2(vClick, uClick);\n  var angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\n\nvar fmod = function fmod(num, denom) {\n  var k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\n\nvar minimizeAngle = function minimizeAngle(angle) {\n  var result = fmod(angle, 2 * Math.PI);\n\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n\n  return result;\n};\n\nvar rotMatrix = new THREE.Matrix4();\nvar posNew = new THREE.Vector3();\nvar ray = new THREE.Ray();\nvar intersection = new THREE.Vector3();\n\nvar AxisRotator = function AxisRotator(_ref) {\n  var dir1 = _ref.dir1,\n      dir2 = _ref.dir2,\n      axis = _ref.axis;\n\n  var _React$useContext = React.useContext(context),\n      rotationLimits = _React$useContext.rotationLimits,\n      annotationsClass = _React$useContext.annotationsClass,\n      depthTest = _React$useContext.depthTest,\n      scale = _React$useContext.scale,\n      lineWidth = _React$useContext.lineWidth,\n      fixed = _React$useContext.fixed,\n      axisColors = _React$useContext.axisColors,\n      hoveredColor = _React$useContext.hoveredColor,\n      opacity = _React$useContext.opacity,\n      onDragStart = _React$useContext.onDragStart,\n      onDrag = _React$useContext.onDrag,\n      onDragEnd = _React$useContext.onDragEnd,\n      userData = _React$useContext.userData; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n\n  var camControls = useThree(function (state) {\n    return state.controls;\n  });\n  var divRef = React.useRef(null);\n  var objRef = React.useRef(null);\n  var angle0 = React.useRef(0);\n  var angle = React.useRef(0);\n  var clickInfo = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isHovered = _React$useState2[0],\n      setIsHovered = _React$useState2[1];\n\n  var onPointerDown = React.useCallback(function (e) {\n    divRef.current.innerText = \"\".concat(toDegrees(angle.current).toFixed(0), \"\\xBA\");\n    divRef.current.style.display = 'block';\n    e.stopPropagation();\n    var clickPoint = e.point.clone();\n    var origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    var e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    var e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    var normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    var plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint: clickPoint,\n      origin: origin,\n      e1: e1,\n      e2: e2,\n      normal: normal,\n      plane: plane\n    };\n    onDragStart();\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart]);\n  var onPointerMove = React.useCallback(function (e) {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      var _clickInfo$current = clickInfo.current,\n          clickPoint = _clickInfo$current.clickPoint,\n          origin = _clickInfo$current.origin,\n          e1 = _clickInfo$current.e1,\n          e2 = _clickInfo$current.e2,\n          normal = _clickInfo$current.normal,\n          plane = _clickInfo$current.plane;\n\n      var _ref2 = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined],\n          _ref3 = _slicedToArray(_ref2, 2),\n          min = _ref3[0],\n          max = _ref3[1];\n\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      var deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      var degrees = toDegrees(deltaAngle); // @ts-ignore\n\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n\n      if (min !== undefined && max !== undefined) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n        degrees = toDegrees(angle.current);\n      }\n\n      divRef.current.innerText = \"\".concat(degrees.toFixed(0), \" \\xBA\");\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [onDrag, isHovered, rotationLimits, axis]);\n  var onPointerUp = React.useCallback(function (e) {\n    divRef.current.style.display = 'none';\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  var onPointerOut = React.useCallback(function (e) {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  var matrixL = React.useMemo(function () {\n    var dir1N = dir1.clone().normalize();\n    var dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  var r = fixed ? 0.65 : scale * 0.65;\n  var arc = React.useMemo(function () {\n    var segments = 32;\n    var points = [];\n\n    for (var j = 0; j <= segments; j++) {\n      var _angle = j * (Math.PI / 2) / segments;\n\n      points.push(new THREE.Vector3(Math.cos(_angle) * r, Math.sin(_angle) * r, 0));\n    }\n\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: function raycast() {\n      return null;\n    },\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }));\n};\n\nexport { AxisRotator };","map":{"version":3,"names":["React","THREE","useThree","Line","Html","clamp","context","clickDir","Vector3","intersectionDir","toDegrees","radians","Math","PI","toRadians","degrees","calculateAngle","clickPoint","intersectionPoint","origin","e1","e2","copy","sub","dote1e1","dot","dote2e2","uClick","vClick","uIntersection","vIntersection","angleClick","atan2","angleIntersection","fmod","num","denom","k","floor","minimizeAngle","angle","result","abs","rotMatrix","Matrix4","posNew","ray","Ray","intersection","AxisRotator","dir1","dir2","axis","useContext","rotationLimits","annotationsClass","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","camControls","state","controls","divRef","useRef","objRef","angle0","clickInfo","useState","isHovered","setIsHovered","onPointerDown","useCallback","e","current","innerText","toFixed","style","display","stopPropagation","point","clone","setFromMatrixPosition","matrixWorld","setFromMatrixColumn","normalize","normal","plane","Plane","setFromNormalAndCoplanarPoint","enabled","target","setPointerCapture","pointerId","onPointerMove","undefined","min","max","intersectPlane","direction","negate","deltaAngle","shiftKey","round","makeRotationAxis","applyMatrix4","setPosition","onPointerUp","releasePointerCapture","onPointerOut","matrixL","useMemo","dir1N","dir2N","makeBasis","cross","r","arc","segments","points","j","push","cos","sin","createElement","ref","matrix","matrixAutoUpdate","position","background","color","padding","borderRadius","whiteSpace","className","visible","transparent","raycast","polygonOffset","polygonOffsetFactor"],"sources":["/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/node_modules/@react-three/drei/core/pivotControls/AxisRotator.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../Line.js';\nimport { Html } from '../../web/Html.js';\nimport clamp from 'lodash.clamp';\nimport { context } from './context.js';\n\nconst clickDir = new THREE.Vector3();\nconst intersectionDir = new THREE.Vector3();\n\nconst toDegrees = radians => radians * 180 / Math.PI;\n\nconst toRadians = degrees => degrees * Math.PI / 180;\n\nconst calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  const dote1e1 = e1.dot(e1);\n  const dote2e2 = e2.dot(e2);\n  const uClick = clickDir.dot(e1) / dote1e1;\n  const vClick = clickDir.dot(e2) / dote2e2;\n  const uIntersection = intersectionDir.dot(e1) / dote1e1;\n  const vIntersection = intersectionDir.dot(e2) / dote2e2;\n  const angleClick = Math.atan2(vClick, uClick);\n  const angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\n\nconst fmod = (num, denom) => {\n  let k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\n\nconst minimizeAngle = angle => {\n  let result = fmod(angle, 2 * Math.PI);\n\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n\n  return result;\n};\n\nconst rotMatrix = new THREE.Matrix4();\nconst posNew = new THREE.Vector3();\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst AxisRotator = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    rotationLimits,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const angle0 = React.useRef(0);\n  const angle = React.useRef(0);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;\n    divRef.current.style.display = 'block';\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      origin,\n      e1,\n      e2,\n      normal,\n      plane\n    };\n    onDragStart();\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [camControls, onDragStart]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        origin,\n        e1,\n        e2,\n        normal,\n        plane\n      } = clickInfo.current;\n      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      let deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      let degrees = toDegrees(deltaAngle); // @ts-ignore\n\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n\n      if (min !== undefined && max !== undefined) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n        degrees = toDegrees(angle.current);\n      }\n\n      divRef.current.innerText = `${degrees.toFixed(0)} º`;\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [onDrag, isHovered, rotationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    divRef.current.style.display = 'none';\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const r = fixed ? 0.65 : scale * 0.65;\n  const arc = React.useMemo(() => {\n    const segments = 32;\n    const points = [];\n\n    for (let j = 0; j <= segments; j++) {\n      const angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(angle) * r, Math.sin(angle) * r, 0));\n    }\n\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }));\n};\n\nexport { AxisRotator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}