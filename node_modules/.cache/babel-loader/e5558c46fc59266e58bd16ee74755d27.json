{"ast":null,"code":"// import React, { useRef } from \"react\"\n// import { useGLTF } from \"@react-three/drei\"\n// export default function Model({}) {\n//     const { nodes, materials} = useGLTF(\"/earth.gltf\")\n//     return (\n//         <group scale={1.5} dispose={null}>\n//             <group scale={1.13}>\n//                 <mesh geometry={nodes.Object_4.geometry} material={materials[\"scene_-_Root\"]}>\n//                 </mesh>\n//             </group>\n//         </group>\n//     )\n// }\n// useGLTF.preload(\"/earth.gltf\")\nimport * as THREE from 'three';\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\nconst geometry = new THREE.SphereGeometry(15, 32, 16);\nconst material = new THREE.MeshBasicMaterial({\n  color: 0xffff00\n});\nconst sphere = new THREE.Mesh(geometry, material);\nscene.add(sphere);\ncamera.position.z = 5;\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\n\nanimate();","map":{"version":3,"names":["THREE","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","SphereGeometry","material","MeshBasicMaterial","color","sphere","Mesh","add","position","z","animate","requestAnimationFrame","render"],"sources":["/Users/ludvigbergsaker/Documents/Notify/notify_custom/notify_custom/src/components/Earth.js"],"sourcesContent":["\n// import React, { useRef } from \"react\"\n// import { useGLTF } from \"@react-three/drei\"\n\n// export default function Model({}) {\n//     const { nodes, materials} = useGLTF(\"/earth.gltf\")\n//     return (\n//         <group scale={1.5} dispose={null}>\n//             <group scale={1.13}>\n//                 <mesh geometry={nodes.Object_4.geometry} material={materials[\"scene_-_Root\"]}>\n//                 </mesh>\n//             </group>\n//         </group>\n//     )\n// }\n\n// useGLTF.preload(\"/earth.gltf\")\n\nimport * as THREE from 'three';\n\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst geometry = new THREE.SphereGeometry( 15, 32, 16 );\nconst material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\nconst sphere = new THREE.Mesh( geometry, material );\nscene.add( sphere );\n\ncamera.position.z = 5;\n\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n\trenderer.render( scene, camera );\n}\nanimate();"],"mappings":"AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,MAAMC,KAAK,GAAG,IAAID,KAAK,CAACE,KAAV,EAAd;AACA,MAAMC,MAAM,GAAG,IAAIH,KAAK,CAACI,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,GAAzE,EAA8E,IAA9E,CAAf;AAEA,MAAMC,QAAQ,GAAG,IAAIR,KAAK,CAACS,aAAV,EAAjB;AACAD,QAAQ,CAACE,OAAT,CAAkBL,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAI,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA2BL,QAAQ,CAACM,UAApC;AAEA,MAAMC,QAAQ,GAAG,IAAIf,KAAK,CAACgB,cAAV,CAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,CAAjB;AACA,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,iBAAV,CAA6B;EAAEC,KAAK,EAAE;AAAT,CAA7B,CAAjB;AACA,MAAMC,MAAM,GAAG,IAAIpB,KAAK,CAACqB,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAf;AACAhB,KAAK,CAACqB,GAAN,CAAWF,MAAX;AAEAjB,MAAM,CAACoB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AAGA,SAASC,OAAT,GAAmB;EAClBC,qBAAqB,CAAED,OAAF,CAArB;EACAjB,QAAQ,CAACmB,MAAT,CAAiB1B,KAAjB,EAAwBE,MAAxB;AACA;;AACDsB,OAAO"},"metadata":{},"sourceType":"module"}